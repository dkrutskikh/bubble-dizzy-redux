name: CMake

on:
  workflow_call:

permissions: {}

jobs:
  cmake:
    strategy:
      matrix:
        include:
        - name: macOS XCode
          platform: macos-xcode-arm
          os: macos-15
          cmake_preset: macos-xcode-release

        - name: macOS Ninja
          platform: macos-ninja-arm
          os: macos-15
          run_cpack: 1
          cmake_preset: macos-ninja-release
          cpack_type: RelWithDebInfo
          cpack_extension: tar.gz

        - name: Windows MSVC
          platform: windows-msvc-x64
          os: windows-2025
          cmake_preset: windows-msvc-release

        - name: Windows MSVC x86
          platform: windows-msvc-x86
          os: windows-2025
          cmake_preset: windows-msvc-release-x86

    name: CMake (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Prepare CI
      run: |
        if [[ "${{ matrix.os }}" =~ "macos" ]]; then
          brew install ninja
        elif [[ "${{ matrix.os }}" =~ "windows" ]]; then
          MSVC_INSTALL_PATH=$(vswhere -latest -property installationPath)
          echo "MSVC_INSTALL_PATH = $MSVC_INSTALL_PATH"

          echo "Installed toolset versions:"
          ls -vr "$MSVC_INSTALL_PATH/VC/Tools/MSVC"

          TOOLS_DIR=$(ls -vr "$MSVC_INSTALL_PATH/VC/Tools/MSVC/" | head -1)
          echo "TOOLS_DIR = $TOOLS_DIR"

          DUMPBIN_PATH="$MSVC_INSTALL_PATH/VC/Tools/MSVC/$TOOLS_DIR/bin/Hostx64/x64/dumpbin.exe"
          echo "DUMPBIN_PATH = $DUMPBIN_PATH"
        fi

    - name: Build Number
      run: |
        BUILD_FILE_NAME="${GITHUB_RUN_ID}-BubbleDizzyRedux"
        BUILD_NAME_SUFFIX=""
        ENABLE_PUBLIC_RELEASE="OFF"

        if [ "${{ github.event_name }}" == "pull_request" ];
        then
          BUILD_FILE_NAME="${BUILD_FILE_NAME}-PR-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"
          BUILD_NAME_SUFFIX="PR ${{ github.event.pull_request.number }}"
        else
          RAW_BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"

          # Replace anything that is not alphanumeric (either alphabets or numbers) with `-`
          BRANCH_NAME="$(echo "$RAW_BRANCH_NAME" | sed -E 's/[^[:alnum:]-]+/-/g')"

          BUILD_FILE_NAME="${BUILD_FILE_NAME}-Branch-${BRANCH_NAME}-${{ github.sha }}"

          if [ "${BRANCH_NAME}" != "main" ];
          then
            BUILD_NAME_SUFFIX="BRANCH ${BRANCH_NAME}"
          else
            ENABLE_PUBLIC_RELEASE="ON"
          fi
        fi

        if [ "${BUILD_NAME_SUFFIX}" != "" ];
        then
          BUILD_NAME_SUFFIX="(${BUILD_NAME_SUFFIX})"
        fi

        echo BUILD_FILE_NAME="$BUILD_FILE_NAME" >> $GITHUB_ENV
        echo BUILD_NAME_SUFFIX="$BUILD_NAME_SUFFIX" >> $GITHUB_ENV
        echo ENABLE_PUBLIC_RELEASE="$ENABLE_PUBLIC_RELEASE" >> $GITHUB_ENV

    - name: Configure
      run: |
        cmake --preset ${{ matrix.cmake_preset }}

    - name: Build
      run: |
        cmake --build --preset ${{ matrix.cmake_preset }}

    - name: Pack
      id: cpack
      if: ${{ matrix.run_cpack == 1 }}
      run: |
        cd '${{ github.workspace }}/out/build/${{ matrix.cmake_preset }}'

        cpack -C ${{ matrix.cpack_type }}

        rm -rf _CPack_Packages

    - name: Artifacts
      if: ${{ matrix.run_cpack == 1 }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.BUILD_FILE_NAME }} - ${{ matrix.platform }}
        compression-level: 0
        path: |
          ${{ github.workspace }}/out/build/${{ matrix.cmake_preset }}/${{ env.BUILD_FILE_NAME }}.${{ matrix.cpack_extension }}
